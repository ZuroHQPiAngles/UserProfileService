name: Package build test

on:
  pull_request:

env:
  CODEARTIFACT_REPO_URL: ${{ secrets.CODEARTIFACT_REPO_URL }}
  CODEARTIFACT_DOMAIN: ${{ secrets.CODEARTIFACT_DOMAIN }}
  CODEARTIFACT_DOMAIN_OWNER: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:

# Main Branch protection Rule 
  branchcheck:
    name: Main Branch check 'branch other than develop or hotfix is getting merged into main return error rightaway'
    runs-on: ubuntu-latest
    if: (contains(github.base_ref, 'main') && !contains(github.head_ref, 'develop')) || (contains(github.base_ref, 'main') && !contains(github.head_ref, 'hotfix'))
    steps:
     - uses: actions/checkout@v1
     - name: invalid branch
       run: exit 1
       
  build:
    name: Maven package test
# Main Branch protection Rule - 'Allow only if develop or hotfix is getting merged into main or pull request is to merge into develop branch from any other branch'   
    if: (contains(github.base_ref, 'main') && contains(github.head_ref, 'develop') ) || (contains(github.base_ref, 'main') && contains(github.head_ref, 'hotfix') ) || contains(github.base_ref, 'develop')
    runs-on: ubuntu-latest

    steps:
      - name: Run git checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Acquire AWS CodeArtifact token
        id: token
        run: |
          CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain $CODEARTIFACT_DOMAIN --domain-owner $CODEARTIFACT_DOMAIN_OWNER --query authorizationToken --output text)
          echo "::set-output name=token::$CODEARTIFACT_AUTH_TOKEN"

      - name: Configure Java
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          server-id: codeartifact
          server-username: MAVEN_USERNAME
          server-password: MAVEN_TOKEN

      - name: Build Package
        run: |
          mvn versions:use-latest-versions
          mvn package
        env:
          MAVEN_USERNAME: aws
          MAVEN_TOKEN: ${{ steps.token.outputs.token }}
          
#Sonar build and analyze
  sonarbuild:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}    
      - name: Acquire AWS CodeArtifact token
        id: token
        run: |
          CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain $CODEARTIFACT_DOMAIN --domain-owner $CODEARTIFACT_DOMAIN_OWNER --query authorizationToken --output text)
          echo "::set-output name=token::$CODEARTIFACT_AUTH_TOKEN"
    
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'
          server-id: codeartifact
          server-username: MAVEN_USERNAME
          server-password: MAVEN_TOKEN  

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          MAVEN_USERNAME: aws
          MAVEN_TOKEN: ${{ steps.token.outputs.token }}
        run: |
          mvn versions:use-latest-versions
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ZuroHQ_UserProfileService
        
# "notify" workflow for slack notification
  notify:
  
    name: Notify on Slack
    runs-on: ubuntu-latest
    # Only run this workflow when "build" workflow succeeds
    needs: [build]
    
    # Only run this workflow if it target is main branch on pull_request event
    if: ${{ github.base_ref == 'main' && github.event_name == 'pull_request' }}

    steps:
      - uses: abinoda/slack-action@master
        env:
          # required
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
      # custom message to send to slack
          args: '{\"channel\":\"${{ secrets.CHANNEL_ID }}\",\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Pull Request notification for UserProfile Service*\"}},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Title:* ${{ github.event.pull_request.title }}\"}},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Contributor :* ${{ github.event.pull_request.user.login }}\n*Request State:* ${{ github.event.pull_request.state }}\"}},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"<${{ github.event.pull_request.html_url }}|View Pull Request>\"}}]}' 
        
        # Pick up events if the job is success.
        if: success()          
